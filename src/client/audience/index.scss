@mixin prefix($property, $value, $prefixes) {
	@each $prefix in $prefixes {
		-#{$prefix}-#{$property}: $value;
	}

	#{$property}: $value;
}

* {
	box-sizing: border-box;
}

html {
	width: 100%;
	height: 100%;
	font-family: sans-serif;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
	margin: 0;
}

$unread-border: crimson solid;

body {
	display: flex;
	flex-direction: column;
	margin: 0;
	width: 100%;
	height: 100%;
	max-height: 100%;
	overflow: hidden;

	>header {
		display: flex;
		justify-content: space-between;
		padding-inline: .5em;
		height: 1.5rem;
		line-height: 1.5rem;
		background-color: black;
		color: white;
	}

	main {
		flex-grow: 1;
		display: flex;
		flex-direction: column;
		overflow: hidden;

		.page {
			flex-grow: 1;
			display: flex;
			flex-direction: column;
			overflow: auto;

			>header {
				display: flex;
				justify-content: center;
				align-items: center;
				position: sticky;
				top: 0;
				height: 3em;
				background-color: lightgray;

				.nav-back {
					position: absolute;
					left: 1em;
				}
			}

			>main {
				flex-grow: 1;
				overflow-y: auto;
			}
		}

		>footer {
			$height: 3em;
			flex-shrink: 0;
			display: flex;
			justify-content: space-evenly;
			align-items: stretch;
			height: $height;
			background: white;
			border-top: 1px solid black;

			&:not(.visible) {
				display: none;
			}

			>* {
				padding-inline: 1em;
				line-height: $height;
				color: gray;

				&.active {
					color: inherit;
					font-weight: bold;
				}

				&.unread {
					border-bottom: .3em $unread-border;
				}
			}
		}
	}
}

#inbox>main {
	display: flex;
	flex-direction: column;
	gap: 1em;
	padding: 1em;

	>.entry {
		display: flex;
		flex-direction: column;
		border: 1px solid black;
		padding: .5em;

		>.content {
			flex-grow: 1;
			max-height: 3.5em;
			word-break: break-all;
			word-wrap: break-word;
			overflow: hidden;
			@include prefix(mask-image, linear-gradient(to top, transparent, #00000022 10%, #000000 20%), moz webkit);
		}

		&.unread {
			border-right: .8em $unread-border;
		}
	}
}
